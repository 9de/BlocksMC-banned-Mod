buildscript {
    repositories {
        mavenCentral()
        maven {
            name = "forge"
            url = "https://maven.minecraftforge.net/"
        }
        maven {
            name = "SpongePowered"
            url = "https://repo.spongepowered.org/repository/maven-public/"
        }
    }
    dependencies {
        classpath 'net.minecraftforge.gradle:ForgeGradle:2.1-SNAPSHOT'
    }
}

apply plugin: 'net.minecraftforge.gradle.forge'
apply plugin: 'java'
apply plugin: 'eclipse'
apply plugin: 'idea'

version = "1.0.0"
group = "com.turki.bannedMod" // Change this to your package
archivesBaseName = "bannedMod"

sourceCompatibility = targetCompatibility = 1.8
compileJava.options.encoding = 'UTF-8'

minecraft {
    version = "1.8.9-11.15.1.2318-1.8.9"
    runDir = "run"
    mappings = "stable_22"
    
    // Replace this with your mod's main class
    replace "@VERSION@", project.version
    replaceIn "bannedMod.java"
    
    makeObfSourceJar = false
}

configurations {
    shade
    compile.extendsFrom shade
}

dependencies {
    // Add your dependencies here
    // Example:
    // shade 'org.apache.commons:commons-lang3:3.12.0'
}

processResources {
    inputs.property "version", project.version
    inputs.property "mcversion", project.minecraft.version

    from(sourceSets.main.resources.srcDirs) {
        include 'mcmod.info'
        expand 'version':project.version, 'mcversion':project.minecraft.version
    }
        
    from(sourceSets.main.resources.srcDirs) {
        exclude 'mcmod.info'
    }
}

jar {
    configurations.shade.each { dep ->
        from(project.zipTree(dep)) {
            exclude 'META-INF', 'META-INF/**'
        }
    }
    
    manifest {
        attributes(
            'FMLAT': 'bannedMod_at.cfg',
            'FMLCorePluginContainsFMLMod': 'true',
            'ForceLoadAsMod': 'true',
            'TweakClass': 'org.spongepowered.asm.launch.MixinTweaker',
            'TweakOrder': '0',
            'MixinConfigs': 'mixins.bannedMod.json'
        )
    }
}

// Development quality of life improvements
idea { 
    module { 
        inheritOutputDirs = true 
    }
}

// Useful tasks
task sourcesJar(type: Jar) {
    from sourceSets.main.allSource
    classifier = 'sources'
}

task deobfJar(type: Jar) {
    from sourceSets.main.output
    classifier = 'deobf'
}

artifacts {
    archives sourcesJar
    archives deobfJar
}